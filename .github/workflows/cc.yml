name: c++-checks

on:
  pull_request:
    branches: main
  push:
    branches: main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  # (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: RelWithDebInfo

jobs:
  build-lint-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: configure
      run: |
        cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} .
        pip install matplotlib

    - name: build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: lint
      uses: cpp-linter/cpp-linter-action@v2
      id: linter
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        style: file

    - name: check failure
      if: steps.linter.outputs.checks-failed > 0
      run: |
        echo "Some files failed the linting checks!"
        #exit 1
    
    - name: run benchmarks
      run: |
        cd build
        python ../test/benchmark.py --test lite
        mkdir results
        mv *.json results/
        mkdir figures
        python ../test/analyze.py
        mv figures ../
        cd ..
    - name: upload results
      uses: actions/upload-artifact@v3
      with:
        name: results
        path: figures


  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build-lint-test
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: download artifacts
        uses: actions/download-artifact@v3
        with:
          name: results
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: 'figures/'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2




      
